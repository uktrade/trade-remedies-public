version: 2.1

commands:
  install_dependencies:
    description: "Install Python dependencies"
    steps:
      - run:
          name: Install Python dependencies
          command: |
            python3 -m venv venv
            echo ". venv/bin/activate" >> $BASH_ENV
            . venv/bin/activate  # 
            pip install --upgrade pip
            pip install -r requirements/dev.txt

  restore_dependency_cache:
    description: "Restore dependency cache."
    steps:
      - restore_cache:
          key: deps2-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}

  save_dependency_cache:
    description: "Save dependency cache."
    steps:
      - save_cache:
          key: deps2-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}
          paths:
            - "venv"

jobs:

  code_quality:
    docker:
      - image: cimg/python:3.9.5
    steps:
      - checkout
      - restore_dependency_cache
      - install_dependencies
      - save_dependency_cache
      - run:
          name: Run black
          command: |
            black trade_remedies_public --check
      - run:
          name: Run Flake8
          command: |
            pflake8 trade_remedies_public --config pyproject.toml
  test_and_fitness_functions:
    docker:
      - image: cimg/python:3.9.5
        environment:
          DATABASE_URL: sqlite:///db.sqlite3
          DJANGO_SETTINGS_MODULE: config.settings.local
          DJANGO_SECRET_KEY: used_for_testing
          ALLOWED_HOSTS: "*"
    steps:
      - add_ssh_keys:
          fingerprints:
            - "35:b1:18:75:6a:a3:32:1e:12:c6:c6:61:f8:f4:a1:e7"
      - checkout
      - restore_dependency_cache
      - install_dependencies
      - save_dependency_cache
      - run:
          name: Run tests and save coverage report
          command: |
            pytest
            coverage json
      - run:
          name: Send coverage report to codecov.io
          command: codecov
      - run:
          name: Collect and publish fitness functions
          command: |
            fitness-functions run . trade_remedies_public
            fitness-functions publish . trade_remedies_public
      - run:
          name: Push the updated READ.ME back to GitHub
          command: |
            git config user.email "fitness-functions-machine-user@digital.trade.gov.uk"  # /PS-IGNORE
            git config user.name "FITNESS-FUNCTIONS MACHINE USER"  # /PS-IGNORE
            git add fitness/fitness_metrics.db
            git add fitness/fitness_metrics_graph.png
            git commit -m "[ci skip] AUTOMATED - update fitness functions"
            git push << pipeline.project.git_url >> << pipeline.git.branch >>
  front_end:
    docker:
      - image: 'circleci/node:lts'
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Restore npm dependencies
          command: npm ci
      - run:
          name: Run prettier
          command: |
            npm run prettier
      - save_cache:
          paths:
            - node_modules
          key: npm-dependencies-{{ checksum "package-lock.json" }}

workflows:
  version: 2
  run_tests:
    jobs:
      - code_quality
      - test_and_fitness_functions
      - front_end

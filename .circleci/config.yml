version: 2.1
orbs:
  cypress: cypress-io/cypress@3
commands:
  install_dependencies:
    description: "Install Python dependencies"
    parameters:
      requirements_file:
        default: "requirements/dev.txt"
        type: string
    steps:
      - run:
          name: Install Python dependencies
          command: |
            python3 -m venv venv
            echo ". venv/bin/activate" >> $BASH_ENV
            . venv/bin/activate  # 
            pip install --upgrade pip
            pip install -r requirements/dev.txt

  restore_dependency_cache:
    description: "Restore dependency cache."
    steps:
      - restore_cache:
          key: deps2-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}

  save_dependency_cache:
    description: "Save dependency cache."
    steps:
      - save_cache:
          key: deps2-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}
          paths:
            - "venv"

  restore_api_dependency_cache:
    description: "Restore dependency cache."
    steps:
      - restore_cache:
          key: deps2-{{ .Branch }}-{{ checksum "~/trade-remedies-api/requirements/dev.txt" }}

  save_api_dependency_cache:
    description: "Save dependency cache."
    steps:
      - save_cache:
          key: deps2-{{ .Branch }}-{{ checksum "~/trade-remedies-api/requirements/dev.txt" }}
          paths:
            - "venv"

jobs:

  code_quality:
    docker:
      - image: cimg/python:3.9.5
    steps:
      - checkout
      - restore_dependency_cache
      - install_dependencies
      - save_dependency_cache
      - run:
          name: Run black
          command: |
            black trade_remedies_public --check
      - run:
          name: Run Flake8
          command: |
            pflake8 trade_remedies_public --config pyproject.toml
  test_and_fitness_functions:
    docker:
      - image: cimg/python:3.9.5
        environment:
          DATABASE_URL: sqlite:///db.sqlite3
          DJANGO_SETTINGS_MODULE: config.settings.test
          DJANGO_SECRET_KEY: used_for_testing
          ALLOWED_HOSTS: "*"
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ba:20:40:f8:be:ec:29:e7:81:14:2a:87:49:9c:8e:e7"
      - checkout
      - restore_dependency_cache
      - install_dependencies
      - save_dependency_cache
      - run:
          name: Run tests and save coverage report
          command: |
            pytest trade_remedies_public
            coverage json
      - run:
          name: Send coverage report to codecov.io
          command: codecov
  front_end_testing:
    docker:
      - image: cimg/python:3.9.5
        environment:
          DATABASE_URL: psql://ubuntu@localhost:5432/trade_remedies
          DJANGO_SETTINGS_MODULE: config.settings.test
          DJANGO_SECRET_KEY: ci_only
          ALLOWED_HOSTS: "*"
          OPENSEARCH_HOST: "opensearch"
          OPENSEARCH_PORT: "9200"
          HEALTH_CHECK_USER_EMAIL: "test@example.com"
          HEALTH_CHECK_TOKEN: "123"
          CASE_WORKER_ENVIRONMENT_KEY: "123"
          PUBLIC_ENVIRONMENT_KEY: "123"
          AUDIT_EMAIL_IAM_USER: "test_user"
          AUDIT_EMAIL_SMTP_USERNAME: "test_user"
          AUDIT_EMAIL_SMTP_PASSWORD: "test_password"
          AUDIT_EMAIL_TO_ADDRESS: "test@example.com"
          API_BASE_URL: http://localhost:8000
      - image: circleci/postgres:9.6.5-alpine-ram
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: trade_remedies
          POSTGRES_PASSWORD: ""
      - image: opensearchproject/opensearch:1.2.4
        environment:
          - discovery.type=single-node
          - plugins.security.disabled=true
    steps:
      - checkout
      - restore_dependency_cache
      - install_dependencies
      - save_dependency_cache
      - add_ssh_keys:
          fingerprints:
            - "4e:01:33:11:90:5d:af:f4:f0:97:cd:f5:cb:cd:e1:ce"
      - run:
          name: Clone trade-remedies API
          command: |
            git clone https://github.com/uktrade/trade-remedies-api ~/trade-remedies-api
      - restore_api_dependency_cache
      - run:
          name: Install API dependencies
          command: |
            pip install -r ~/trade-remedies-api/requirements/dev.txt
      - save_api_dependency_cache
      - run:
          name: Run API testserver
          command: |
              python ~/trade-remedies-api/trade_remedies_api/manage.py testserver ~/trade-remedies-api/trade_remedies_api/security/fixtures/*.json ~/trade-remedies-api/trade_remedies_api/organisations/fixtures/*.json ~/trade-remedies-api/trade_remedies_api/cases/fixtures/*.json ~/trade-remedies-api/trade_remedies_api/core/fixtures/*.json --noinput
          background: true
      - run:
          name: Run Public server
          command: |
              python trade-remedies-public/trade_remedies_public/manage.py runserver 8002
          background: true

workflows:
  version: 2
  code_quality_and_tests:
    jobs:
      - code_quality
      - test_and_fitness_functions
      - front_end_testing
      - cypress/run:
          cypress-command: npx cypress run --browser chrome
          install-browsers: true
          post-steps:
            - run: ls
            - store_test_results:
                path: cypress/results
            - store_artifacts:
                path: cypress/screenshots
          requires:
            - front_end_testing

version: 2.1

commands:
  install_chrome:
    description: "Install Chrome"
    steps:
      - run:
          name: Install Chrome
          command: |
            wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
            sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
            apt-get -y update
            apt-get install -y google-chrome-stable

  install_chromedriver:
    description: "Install chromedriver"
    steps:
      - run:
          name: Install chromedriver
          command: |
            apt-get -y update
            apt-get install -yqq unzip
            wget -O /tmp/chromedriver.zip http://chromedriver.storage.googleapis.com/`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`/chromedriver_linux64.zip
            unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/

  install_dependencies:
    description: "Install Python dependencies"
    steps:
      - run:
          name: Install Python dependencies
          command: |
            python3 -m venv venv
            echo ". venv/bin/activate" >> $BASH_ENV
            . venv/bin/activate  # 
            pip install --upgrade pip
            pip install -r requirements/dev.txt

  restore_dependency_cache:
    description: "Restore dependency cache."
    steps:
      - restore_cache:
          key: deps2-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}

  save_dependency_cache:
    description: "Save dependency cache."
    steps:
      - save_cache:
          key: deps2-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}
          paths:
            - "venv"

jobs:

  code_quality:
    docker:
      - image: cimg/python:3.9.5
    steps:
      - checkout
      - restore_dependency_cache
      - install_dependencies
      - save_dependency_cache
      - run:
          name: Run black
          command: |
            black trade_remedies_public --check
      - run:
          name: Run Flake8
          command: |
            pflake8 trade_remedies_public --config pyproject.toml
      - restore_cache:
          key: pii-secret
      - run:
          name: Run pre-commit hooks
          command: |
            pre-commit autoupdate
            pre-commit run --all-files
      - save_cache:
          key: pii-secret
          paths:
            - ".pii-secret-hook"
  test_and_fitness_functions:
    docker:
      - image: cimg/python:3.9.5
        environment:
          DATABASE_URL: sqlite:///db.sqlite3
          DJANGO_SETTINGS_MODULE: config.settings.local
          DJANGO_SECRET_KEY: used_for_testing
          ALLOWED_HOSTS: "*"
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ba:20:40:f8:be:ec:29:e7:81:14:2a:87:49:9c:8e:e7"
      - checkout
      - restore_dependency_cache
      - install_chrome
      - install_chromedriver
      - install_dependencies
      - save_dependency_cache
      - run:
          name: Run tests and save coverage report
          command: |
            pytest trade_remedies_public
            coverage json
      - run:
          name: Send coverage report to codecov.io
          command: codecov
      - run:
          name: Collect and publish fitness functions
          command: |
            fitness-functions run . trade_remedies_public
            fitness-functions publish . trade_remedies_public
      - run:
          name: Push the updated READ.ME back to GitHub
          command: |
            git config user.email "fitness-functions-machine-user@digital.trade.gov.uk"  # /PS-IGNORE
            git config user.name "FITNESS-FUNCTIONS MACHINE USER"  # /PS-IGNORE
            git add fitness/fitness_metrics.db
            git add fitness/fitness_metrics_graph.png
            git commit -m "[ci skip] AUTOMATED - update fitness functions"
            git push << pipeline.project.git_url >> << pipeline.git.branch >>

workflows:
  version: 2
  run_tests:
    jobs:
      - code_quality
      - test_and_fitness_functions

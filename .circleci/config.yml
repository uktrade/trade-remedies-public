version: 2.1

commands:
  install_dependencies:
    description: "Install Python dependencies"
    steps:
      - run:
          name: Install Python dependencies
          command: |
            python3 -m venv venv
            echo ". venv/bin/activate" >> $BASH_ENV
            . venv/bin/activate  # 
            pip install --upgrade pip
            pip install poetry==1.6.1
            poetry export --dev --without-hashes -f requirements.txt -o requirements-dev.txt
            pip install -r requirements-dev.txt

  restore_dependency_cache:
    description: "Restore dependency cache."
    steps:
      - restore_cache:
          key: deps2-{{ .Branch }}-{{ checksum "requirements-dev.txt" }}

  save_dependency_cache:
    description: "Save dependency cache."
    steps:
      - save_cache:
          key: deps2-{{ .Branch }}-{{ checksum "requirements-dev.txt" }}
          paths:
            - "venv"

jobs:

  code_quality:
    docker:
      - image: cimg/python:3.9.5
    steps:
      - checkout
      - restore_dependency_cache
      - install_dependencies
      - save_dependency_cache
      - run:
          name: Run black
          command: |
            black trade_remedies_public --check
      - run:
          name: Run Flake8
          command: |
            pflake8 trade_remedies_public --config pyproject.toml
  test_and_fitness_functions:
    docker:
      - image: cimg/python:3.9.5
        environment:
          DATABASE_URL: sqlite:///db.sqlite3
          DJANGO_SETTINGS_MODULE: config.settings.test
          DJANGO_SECRET_KEY: used_for_testing
          ALLOWED_HOSTS: "*"
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ba:20:40:f8:be:ec:29:e7:81:14:2a:87:49:9c:8e:e7"
      - checkout
      - restore_dependency_cache
      - install_dependencies
      - save_dependency_cache
      - run:
          name: Run tests and save coverage report
          command: |
            pytest trade_remedies_public
            coverage json
      - run:
          name: Send coverage report to codecov.io
          command: codecov

workflows:
  version: 2
  run_tests:
    jobs:
      - code_quality
      - test_and_fitness_functions
